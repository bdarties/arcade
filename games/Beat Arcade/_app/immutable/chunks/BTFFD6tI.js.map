{"version":3,"file":"BTFFD6tI.js","sources":["../../../../../../src/lib/ui/NavigationManager.js"],"sourcesContent":["/**\n * Gère la navigation au clavier pour l'UI (borne d'arcade)\n * Navigation: ZQSD ou Flèches directionnelles\n * Validation: R ou I\n */\nexport class NavigationManager {\n\tconstructor() {\n\t\tthis.enabled = false;\n\t\tthis.focusableElements = [];\n\t\tthis.currentIndex = 0;\n\t\tthis.callbacks = {\n\t\t\tonNavigate: null,\n\t\t\tonValidate: null,\n\t\t\tonSelect: null,  // W ou B\n\t\t\tonStart: null    // X ou N\n\t\t};\n\n\t\t// Binding des événements\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\n\t}\n\n\t/**\n\t * Active la navigation et découvre les éléments focusables\n\t */\n\tenable(selector = '[data-nav-item]') {\n\t\tif (this.enabled) return;\n\n\t\t// Découvrir les éléments navigables\n\t\tthis.discoverElements(selector);\n\n\t\t// Activer les événements\n\t\twindow.addEventListener('keydown', this.handleKeyDown);\n\t\tthis.enabled = true;\n\n\t\t// Focus initial\n\t\tif (this.focusableElements.length > 0) {\n\t\t\tthis.setFocus(0);\n\t\t}\n\t}\n\n\t/**\n\t * Désactive la navigation\n\t */\n\tdisable() {\n\t\tif (!this.enabled) return;\n\n\t\twindow.removeEventListener('keydown', this.handleKeyDown);\n\t\tthis.enabled = false;\n\n\t\t// Retirer le focus\n\t\tthis.clearFocus();\n\t}\n\n\t/**\n\t * Découvre les éléments navigables dans le DOM\n\t */\n\tdiscoverElements(selector) {\n\t\tconst elements = document.querySelectorAll(selector);\n\t\tthis.focusableElements = Array.from(elements).filter(el => {\n\t\t\t// Filtrer les éléments disabled ou invisibles\n\t\t\treturn !el.disabled && el.offsetParent !== null;\n\t\t});\n\t}\n\n\t/**\n\t * Redécouvre les éléments (utile si le DOM change)\n\t */\n\trefresh(selector = '[data-nav-item]') {\n\t\tconst previousElement = this.focusableElements[this.currentIndex];\n\t\tthis.discoverElements(selector);\n\n\t\t// Essayer de maintenir le focus sur le même élément\n\t\tif (previousElement) {\n\t\t\tconst newIndex = this.focusableElements.indexOf(previousElement);\n\t\t\tif (newIndex !== -1) {\n\t\t\t\tthis.currentIndex = newIndex;\n\t\t\t} else {\n\t\t\t\tthis.currentIndex = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis.setFocus(this.currentIndex);\n\t}\n\n\t/**\n\t * Gère les touches de navigation\n\t */\n\thandleKeyDown(event) {\n\t\tif (!this.enabled) return;\n\n\t\tconst key = event.key.toLowerCase();\n\n\t\t// Select (B button) - Toujours actif même sans éléments focusables\n\t\tif (key === 'w' || key === 'b') {\n\t\t\tevent.preventDefault();\n\t\t\tthis.notifySelect();\n\t\t\treturn;\n\t\t}\n\t\t// Start (X button) - Toujours actif même sans éléments focusables\n\t\telse if (key === 'x' || key === 'n') {\n\t\t\tevent.preventDefault();\n\t\t\tthis.notifyStart();\n\t\t\treturn;\n\t\t}\n\n\t\t// Les touches suivantes nécessitent des éléments focusables\n\t\tif (this.focusableElements.length === 0) return;\n\n\t\t// Navigation haut\n\t\tif (key === 'z' || key === 'arrowup') {\n\t\t\tevent.preventDefault();\n\t\t\tthis.navigateUp();\n\t\t}\n\t\t// Navigation bas\n\t\telse if (key === 's' || key === 'arrowdown') {\n\t\t\tevent.preventDefault();\n\t\t\tthis.navigateDown();\n\t\t}\n\t\t// Navigation gauche (optionnel pour grilles)\n\t\telse if (key === 'q' || key === 'arrowleft') {\n\t\t\tevent.preventDefault();\n\t\t\tthis.navigateLeft();\n\t\t}\n\t\t// Navigation droite (optionnel pour grilles)\n\t\telse if (key === 'd' || key === 'arrowright') {\n\t\t\tevent.preventDefault();\n\t\t\tthis.navigateRight();\n\t\t}\n\t\t// Validation (A button)\n\t\telse if (key === 'r' || key === 'i') {\n\t\t\tevent.preventDefault();\n\t\t\tthis.validate();\n\t\t}\n\t}\n\n\t/**\n\t * Navigation vers le haut\n\t */\n\tnavigateUp() {\n\t\tif (this.focusableElements.length === 0) return;\n\n\t\tconst newIndex = this.currentIndex - 1;\n\t\tif (newIndex >= 0) {\n\t\t\tthis.setFocus(newIndex);\n\t\t\tthis.notifyNavigate('up');\n\t\t}\n\t}\n\n\t/**\n\t * Navigation vers le bas\n\t */\n\tnavigateDown() {\n\t\tif (this.focusableElements.length === 0) return;\n\n\t\tconst newIndex = this.currentIndex + 1;\n\t\tif (newIndex < this.focusableElements.length) {\n\t\t\tthis.setFocus(newIndex);\n\t\t\tthis.notifyNavigate('down');\n\t\t}\n\t}\n\n\t/**\n\t * Navigation vers la gauche (pour grilles)\n\t */\n\tnavigateLeft() {\n\t\t// Pour l'instant, même comportement que haut\n\t\tthis.navigateUp();\n\t\tthis.notifyNavigate('left');\n\t}\n\n\t/**\n\t * Navigation vers la droite (pour grilles)\n\t */\n\tnavigateRight() {\n\t\t// Pour l'instant, même comportement que bas\n\t\tthis.navigateDown();\n\t\tthis.notifyNavigate('right');\n\t}\n\n\t/**\n\t * Valide l'élément actuel\n\t */\n\tvalidate() {\n\t\tif (this.focusableElements.length === 0) return;\n\n\t\tconst element = this.focusableElements[this.currentIndex];\n\t\tif (element) {\n\t\t\t// Déclencher le clic sur l'élément\n\t\t\telement.click();\n\t\t\tthis.notifyValidate(element);\n\t\t}\n\t}\n\n\t/**\n\t * Change le focus vers un index donné\n\t */\n\tsetFocus(index) {\n\t\tif (index < 0 || index >= this.focusableElements.length) return;\n\n\t\t// Retirer l'ancien focus\n\t\tthis.clearFocus();\n\n\t\t// Appliquer le nouveau focus\n\t\tthis.currentIndex = index;\n\t\tconst element = this.focusableElements[index];\n\t\telement.setAttribute('data-nav-focused', 'true');\n\t\telement.classList.add('nav-focused');\n\n\t\t// Scroll si nécessaire\n\t\telement.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n\t}\n\n\t/**\n\t * Retire le focus de tous les éléments\n\t */\n\tclearFocus() {\n\t\tthis.focusableElements.forEach(el => {\n\t\t\tel.removeAttribute('data-nav-focused');\n\t\t\tel.classList.remove('nav-focused');\n\t\t});\n\t}\n\n\t/**\n\t * Enregistre un callback pour la navigation\n\t */\n\tonNavigate(callback) {\n\t\tthis.callbacks.onNavigate = callback;\n\t}\n\n\t/**\n\t * Enregistre un callback pour la validation\n\t */\n\tonValidate(callback) {\n\t\tthis.callbacks.onValidate = callback;\n\t}\n\n\t/**\n\t * Enregistre un callback pour Select (W/B)\n\t */\n\tonSelect(callback) {\n\t\tthis.callbacks.onSelect = callback;\n\t}\n\n\t/**\n\t * Enregistre un callback pour Start (X/N)\n\t */\n\tonStart(callback) {\n\t\tthis.callbacks.onStart = callback;\n\t}\n\n\t/**\n\t * Notifie la navigation\n\t */\n\tnotifyNavigate(direction) {\n\t\tif (this.callbacks.onNavigate) {\n\t\t\tthis.callbacks.onNavigate(direction, this.currentIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Notifie la validation\n\t */\n\tnotifyValidate(element) {\n\t\tif (this.callbacks.onValidate) {\n\t\t\tthis.callbacks.onValidate(element, this.currentIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Notifie l'appui sur Select\n\t */\n\tnotifySelect() {\n\t\tif (this.callbacks.onSelect) {\n\t\t\tthis.callbacks.onSelect();\n\t\t}\n\t}\n\n\t/**\n\t * Notifie l'appui sur Start\n\t */\n\tnotifyStart() {\n\t\tif (this.callbacks.onStart) {\n\t\t\tthis.callbacks.onStart();\n\t\t}\n\t}\n\n\t/**\n\t * Retourne l'élément actuellement focusé\n\t */\n\tgetCurrentElement() {\n\t\treturn this.focusableElements[this.currentIndex] || null;\n\t}\n\n\t/**\n\t * Nettoie les ressources\n\t */\n\tdispose() {\n\t\tthis.disable();\n\t\tthis.focusableElements = [];\n\t\tthis.callbacks = {};\n\t}\n}"],"names":["NavigationManager","selector","elements","el","previousElement","newIndex","event","key","element","index","callback","direction"],"mappings":"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"}